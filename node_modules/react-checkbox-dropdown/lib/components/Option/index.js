'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Option = function Option(_ref) {
  var _onChange = _ref.onChange,
      onDeselectOption = _ref.onDeselectOption,
      option = _ref.option,
      isSelected = _ref.isSelected,
      styleFunc = _ref.styleFunc,
      index = _ref.index,
      Checkbox = _ref.Checkbox;

  var _useState = (0, _react.useState)(false),
      isFocused = _useState[0],
      setFocus = _useState[1];

  var _useState2 = (0, _react.useState)(false),
      isHovered = _useState2[0],
      setHover = _useState2[1];

  return _react2.default.createElement(
    'label',
    {
      htmlFor: 'option-' + index,
      className: 'option',
      onMouseEnter: function onMouseEnter() {
        setHover(true);
      },
      onMouseLeave: function onMouseLeave() {
        setHover(false);
      },
      onFocus: function onFocus() {
        setFocus(true);
      },
      onBlur: function onBlur() {
        setFocus(false);
      },
      style: _extends({
        fontSize: '18px',
        display: 'flex',
        alignItems: 'center',
        paddingLeft: '22px',
        height: '50px',
        borderBottom: '.5px solid #A39A9A',
        fontWeight: isSelected ? 'bold' : 'normal',
        cursor: 'pointer'
      }, styleFunc({ isSelected: isSelected, isFocused: isFocused, isHovered: isHovered }))
    },
    _react2.default.createElement('input', {
      id: 'option-' + index,
      type: 'checkbox',
      style: { display: 'none' },
      value: isSelected,
      checked: isSelected,
      onChange: function onChange() {
        _onChange(option);
        if (isSelected) {
          onDeselectOption(option);
        }
      }
    }),
    Checkbox,
    _react2.default.createElement(
      'p',
      null,
      option.label
    )
  );
};

Option.propTypes = process.env.NODE_ENV !== "production" ? {
  onChange: _propTypes2.default.func.isRequired,
  onDeselectOption: _propTypes2.default.func,
  option: _propTypes2.default.shape({
    key: _propTypes2.default.any,
    label: _propTypes2.default.string,
    value: _propTypes2.default.string
  }).isRequired,
  isSelected: _propTypes2.default.bool.isRequired,
  styleFunc: _propTypes2.default.func,
  index: _propTypes2.default.number.isRequired,
  Checkbox: _propTypes2.default.element.isRequired
} : {};

Option.defaultProps = {
  onDeselectOption: function onDeselectOption() {},
  styleFunc: function styleFunc() {}
};

exports.default = Option;
module.exports = exports['default'];