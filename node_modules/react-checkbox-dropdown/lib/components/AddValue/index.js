'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Input = require('./Input');

var _Input2 = _interopRequireDefault(_Input);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var AddValue = function AddValue(_ref) {
  var checkAddedValue = _ref.checkAddedValue,
      addIcon = _ref.addIcon,
      onAddValue = _ref.onAddValue,
      inputPlaceholder = _ref.inputPlaceholder,
      styleFunc = _ref.styleFunc,
      inputStyles = _ref.inputStyles,
      buttonStyles = _ref.buttonStyles;

  var _useState = (0, _react.useState)(''),
      value = _useState[0],
      setValue = _useState[1];

  var _useState2 = (0, _react.useState)(false),
      showInput = _useState2[0],
      setShowInput = _useState2[1];

  var _useState3 = (0, _react.useState)(null),
      isSuccess = _useState3[0],
      setSuccess = _useState3[1];

  var onChange = function onChange(_ref2) {
    var target = _ref2.target;

    setValue(target.value);
  };

  var handleShowInput = function handleShowInput() {
    if (!showInput) {
      setShowInput(true);
    }
  };

  var handleAddValue = function handleAddValue() {
    // add if value accepted and ignore if not
    if (checkAddedValue(value)) {
      onAddValue(value);
      setSuccess(true);
      setValue('');
      setShowInput(false);
    } else {
      setSuccess(false);
    }
  };

  var handleClickAddButton = function handleClickAddButton() {
    if (showInput) {
      // ignore if there is no value
      if (!value) {
        setSuccess(false);
        return;
      }
      handleAddValue();
    }
  };
  return _react2.default.createElement(
    'div',
    {
      className: 'add-more',
      onClick: handleShowInput,
      style: _extends({
        display: 'flex',
        alignItems: 'center',
        height: '65px',
        paddingLeft: '20px',
        fontSize: '18px',
        color: '#989898'
      }, styleFunc({ isSuccess: isSuccess, isInputShown: showInput }))
    },
    _react2.default.createElement(
      'button',
      {
        className: 'add-icon',
        onClick: handleClickAddButton,
        style: _extends({
          height: '20px',
          width: '20px',
          backgroundColor: 'inherit',
          marginRight: '20px',
          cursor: 'pointer',
          padding: '0',
          border: 'none',
          boxShadow: 'none',
          outline: 'none'
        }, buttonStyles({ isSuccess: isSuccess, isInputShown: showInput }))
      },
      addIcon
    ),
    _react2.default.createElement(_Input2.default, {
      value: value,
      onChange: onChange,
      showInput: showInput,
      isSuccess: isSuccess,
      onSubmit: handleAddValue,
      placeholder: inputPlaceholder,
      styleFunc: inputStyles
    })
  );
};

AddValue.propTypes = process.env.NODE_ENV !== "production" ? {
  checkAddedValue: _propTypes2.default.func.isRequired,
  addIcon: _propTypes2.default.oneOf(_propTypes2.default.element, _propTypes2.default.node),
  onAddValue: _propTypes2.default.func.isRequired,
  inputPlaceholder: _propTypes2.default.string.isRequired,
  styleFunc: _propTypes2.default.func.isRequired,
  inputStyles: _propTypes2.default.func.isRequired,
  buttonStyles: _propTypes2.default.func.isRequired
} : {};

exports.default = AddValue;
module.exports = exports['default'];