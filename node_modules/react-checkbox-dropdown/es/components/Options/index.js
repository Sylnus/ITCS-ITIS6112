var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

import React from 'react';
import PropTypes from 'prop-types';

var Options = function Options(_ref) {
  var isOpen = _ref.isOpen,
      children = _ref.children,
      styleFunc = _ref.styleFunc;

  return React.createElement(
    'div',
    {
      className: 'options',
      style: _extends({
        transform: 'scaleY(' + (isOpen ? '1' : '0') + ')',
        height: isOpen ? 'auto' : '0',
        maxHeight: isOpen ? '650px' : '0',
        overflowY: 'scroll',
        transition: 'all .3s ease-in-out'
      }, styleFunc({ isOpen: isOpen }))
    },
    children
  );
};

Options.propTypes = process.env.NODE_ENV !== "production" ? {
  isOpen: PropTypes.bool.isRequired,
  children: PropTypes.arrayOf([PropTypes.node, PropTypes.element]).isRequired,
  style: PropTypes.object
} : {};

Options.defaultProps = {
  styleFunc: function styleFunc() {}
};

export default Options;