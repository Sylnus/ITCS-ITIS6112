var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

import React, { useState } from 'react';

var Checkbox = function Checkbox(_ref) {
  var isChecked = _ref.isChecked,
      checkboxStyle = _ref.checkboxStyle,
      checkedStyle = _ref.checkedStyle;

  var _useState = useState(false),
      isHovered = _useState[0],
      setHover = _useState[1];

  return React.createElement(
    'div',
    {
      className: 'checkbox',
      onMouseEnter: function onMouseEnter() {
        setHover(true);
      },
      onMouseLeave: function onMouseLeave() {
        setHover(false);
      },
      style: _extends({
        height: '20px',
        width: '20px',
        border: '1px solid #000',
        marginRight: '20px',
        display: 'flex',
        alignItems: 'center',
        justifyContent: 'center'
      }, checkboxStyle({ isChecked: isChecked, isHovered: isHovered }))
    },
    isChecked && React.createElement('div', {
      className: 'checked',
      style: _extends({
        width: '60%',
        height: '60%',
        backgroundColor: '#A39A9A'
      }, checkedStyle())
    })
  );
};

export default Checkbox;